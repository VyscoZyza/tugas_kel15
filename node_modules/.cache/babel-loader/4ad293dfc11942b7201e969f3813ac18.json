{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\n\nconst useGif = tag => {\n  const [gif, setGif] = useState('');\n\n  const fetchGif = async tag => {\n    const {\n      data\n    } = await axios.get(tag ? `${url}&tag=${tag}` : url);\n    const imageSrc = data.data.images.downsized_large.url;\n    setGif(imageSrc);\n  };\n\n  useEffect(() => {\n    fetchGif(tag);\n  }, [tag]);\n  return {\n    gif,\n    fetchGif\n  };\n};\n\nexport default useGif;","map":{"version":3,"sources":["D:/Praktikum/tugas_kel15/src/useGif.js"],"names":["useState","useEffect","axios","API_KEY","process","env","REACT_APP_API_KEY","url","useGif","tag","gif","setGif","fetchGif","data","get","imageSrc","images","downsized_large"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,MAAMC,GAAG,GAAI,gDAA+CJ,OAAQ,EAApE;;AAEA,MAAMK,MAAM,GAAIC,GAAD,IAAS;AACpB,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,EAAD,CAA9B;;AAEA,QAAMY,QAAQ,GAAG,MAAOH,GAAP,IAAe;AAC5B,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMX,KAAK,CAACY,GAAN,CAAUL,GAAG,GAAI,GAAEF,GAAI,QAAOE,GAAI,EAArB,GAAyBF,GAAtC,CAAvB;AAEA,UAAMQ,QAAQ,GAAGF,IAAI,CAACA,IAAL,CAAUG,MAAV,CAAiBC,eAAjB,CAAiCV,GAAlD;AAEAI,IAAAA,MAAM,CAACI,QAAD,CAAN;AACH,GAND;;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACH,GAAD,CAAR;AACH,GAFQ,EAEN,CAACA,GAAD,CAFM,CAAT;AAIA,SAAO;AAAEC,IAAAA,GAAF;AAAOE,IAAAA;AAAP,GAAP;AACH,CAhBD;;AAkBA,eAAeJ,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nconst url = `https://api.giphy.com/v1/gifs/random?api_key=${API_KEY}`;\r\n\r\nconst useGif = (tag) => {\r\n    const [gif, setGif] = useState('');\r\n\r\n    const fetchGif = async (tag) => {\r\n        const { data } = await axios.get(tag ? `${url}&tag=${tag}` : url);\r\n\r\n        const imageSrc = data.data.images.downsized_large.url;\r\n\r\n        setGif(imageSrc);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchGif(tag);\r\n    }, [tag]);\r\n\r\n    return { gif, fetchGif }\r\n}\r\n\r\nexport default useGif;"]},"metadata":{},"sourceType":"module"}